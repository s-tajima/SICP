;= Question =============================================================================
;
; 問題 3.1
;
; アキュムレータ(accumulator)は一つの数値引数で繰り返し呼び出される手続きで, 
; 引数をsumに足し込む. 呼び出される度に, 現在sum に足し込まれている合計を返す. 
; それぞれが独立な合計を保持するアキュムレータを生成する手続き make-accumulatorを書け. 
; make-accumulatorの入力は,合計の初期値を規定するものとする; 例えば
; 
; (define A (make-accumulator 5))
; 
; (A 10)
; 15
; 
; (A 10)
; 25
; 
;= Prepared =============================================================================


;= Answer ===============================================================================

(define (make-accumulator num)
  (lambda (sum)
          (begin (set! num (+ num sum))
                 num)))

(define A (make-accumulator 5))

(print (A 10))
(print (A 10))

